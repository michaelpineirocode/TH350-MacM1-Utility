import tkinter as tk
from tkinter import ttk
from subprocess import run, PIPE
from os import system, path

def get_com_ports():
    ports = run(["ls /dev/cu.usbserial-*"], stdout=PIPE, shell=True)
    return ports.stdout.decode('utf-8')

def save_register():
    read_path = path.expanduser("~/.TH-350-Utility/registers/reference.reg")
    write_path = path.expanduser("~/.TH-350-Utility/registers/ports.reg")
    with open(read_path, "r", encoding="utf-16") as f:
        lines = f.readlines()
    for i in range(6):
        lines.append(f"\"COM{i+1}\"=\"{serial_option.get()}\"")
    lines = "\n".join(lines)
    print(lines)
    with open(write_path, "w") as f:
        f.write(lines)
    system(f"wine regedit /C {write_path}")

def refresh_dropdown():
    # Example: Update dropdown options
    options = get_com_ports()
    serial_dropdown['values'] = options

def on_register_load_click():
    # Example action: print selected option and text box content
    print(f"Selected: {serial_option.get()},{com_option.get()}")
    save_register()
    exe_path = path.expanduser("~/Desktop/TH-350US.exe")
    print(exe_path)
    system(f"wine start /unix {exe_path}")

system("pwd")

# Create the main window
root = tk.Tk()
root.title('Dropdown Refresh Example')

# Create a StringVar for the dropdown
serial_option = tk.StringVar()
com_option = tk.StringVar()

# Create the dropdown (combo box)
serial_dropdown = ttk.Combobox(root, textvariable=serial_option)
serial_dropdown['values'] = get_com_ports()  # Initial options
serial_dropdown.grid(column=0, row=0, padx=10, pady=10)

# Create the refresh button
refresh_button = tk.Button(root, text='Refresh Dropdown', command=refresh_dropdown)
refresh_button.grid(column=1, row=0, padx=10, pady=10)

# # Create the text box (entry widget)
# com_dropdown = ttk.Combobox(root, textvariable=com_option)
# com_dropdown['values'] = ["COM1", "COM2", "COM3", "COM4", "COM5", "COM6", "COM7", "COM8"]  # Initial options
# com_dropdown.grid(column=0, row=1, padx=10, pady=10)

# Create another button that performs an action
load_register_button = tk.Button(root, text='Start', command=on_register_load_click)
load_register_button.grid(column=1, row=1, padx=10, pady=10)

# Start the GUI event loop
root.mainloop()
